/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

rootProject.name = "jul"
include(":jul.pattern.launch")
include(":jul.schedule")
include(":jul.audio")
include(":jul.storage")
include(":jul.visual.swing")
include(":jul.extension.type.util")
include(":jul.interface")
include(":jul.processing.module")
include(":jul.extension.type.storage")
include(":jul.pattern.module")
include(":jul.extension.type")
include(":jul.communication.mqtt")
include(":jul.processing.xml")
include(":jul.extension.protobuf")
include(":jul.processing.json")
include(":jul.communication.tcp")
include(":jul.annotation")
include(":jul.exception")
include(":jul.visual")
include(":jul.communication.controller")
include(":jul.extension.type.transform")
include(":jul.visual.javafx")
include(":jul.communication")
include(":jul.processing")
include(":jul.extension.type.processing")
include(":jul.pattern.controller")
include(":jul.extension.type.interface")
include(":jul.pattern")
include(":jul.communication.module")
include(":jul.pattern.trigger")
include(":jul.extension")
project(":jul.pattern.launch").projectDir = file("pattern/launch")
project(":jul.schedule").projectDir = file("schedule")
project(":jul.audio").projectDir = file("audio")
project(":jul.storage").projectDir = file("storage")
project(":jul.visual.swing").projectDir = file("visual/swing")
project(":jul.extension.type.util").projectDir = file("extension/type/util")
project(":jul.interface").projectDir = file("interface")
project(":jul.processing.module").projectDir = file("processing")
project(":jul.extension.type.storage").projectDir = file("extension/type/storage")
project(":jul.pattern.module").projectDir = file("pattern")
project(":jul.extension.type").projectDir = file("extension/type")
project(":jul.communication.mqtt").projectDir = file("communication/mqtt")
project(":jul.processing.xml").projectDir = file("processing/xml")
project(":jul.extension.protobuf").projectDir = file("extension/protobuf")
project(":jul.processing.json").projectDir = file("processing/json")
project(":jul.communication.tcp").projectDir = file("communication/tcp")
project(":jul.annotation").projectDir = file("annotation")
project(":jul.exception").projectDir = file("exception")
project(":jul.visual").projectDir = file("visual")
project(":jul.communication.controller").projectDir = file("communication/controller")
project(":jul.extension.type.transform").projectDir = file("extension/type/transform")
project(":jul.visual.javafx").projectDir = file("visual/javafx")
project(":jul.communication").projectDir = file("communication/default")
project(":jul.processing").projectDir = file("processing/default")
project(":jul.extension.type.processing").projectDir = file("extension/type/processing")
project(":jul.pattern.controller").projectDir = file("pattern/controller")
project(":jul.extension.type.interface").projectDir = file("extension/type/interface")
project(":jul.pattern").projectDir = file("pattern/default")
project(":jul.communication.module").projectDir = file("communication")
project(":jul.pattern.trigger").projectDir = file("pattern/trigger")
project(":jul.extension").projectDir = file("extension")
